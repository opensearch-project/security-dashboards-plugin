// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Role list AccessError component should load access error component 1`] = `
<Fragment>
  <Memo()
    config={Object {}}
    coreStart={
      Object {
        "http": 1,
      }
    }
    dataSourcePickerReadOnly={false}
    navigation={Object {}}
    params={Object {}}
    selectedDataSource={
      Object {
        "id": "test",
      }
    }
    setDataSource={[MockFunction]}
  />
  <EuiPageHeader>
    <EuiTitle
      size="l"
    >
      <h1>
        Roles
      </h1>
    </EuiTitle>
  </EuiPageHeader>
  <EuiPageContent>
    <EuiPageContentHeader
      id="role-table-container"
    >
      <EuiPageContentHeaderSection>
        <EuiTitle
          size="s"
        >
          <h3>
            Roles
            <span
              className="panel-header-count"
            >
               
              (
              0
              )
            </span>
          </h3>
        </EuiTitle>
        <EuiText
          color="subdued"
          size="xs"
        >
          Roles are the core way of controlling access to your cluster. Roles contain any combination of cluster-wide permission, index-specific permissions, document- and field-level security, and tenants. Then you map users to these roles so that users gain those permissions. 
          <mockConstructor
            href="https://opensearch.org/docs/latest/security-plugin/access-control/users-roles/"
          />
        </EuiText>
      </EuiPageContentHeaderSection>
      <EuiPageContentHeaderSection>
        <EuiFlexGroup>
          <EuiFlexItem>
            <EuiButtonEmpty
              data-test-subj="edit"
              disabled={true}
              key="edit"
              onClick={[Function]}
            >
              Edit
            </EuiButtonEmpty>
            <EuiButtonEmpty
              data-test-subj="duplicate"
              disabled={true}
              key="duplicate"
              onClick={[Function]}
            >
              Duplicate
            </EuiButtonEmpty>
            <EuiButtonEmpty
              color="danger"
              disabled={true}
              key="delete"
              onClick={[MockFunction]}
            >
              Delete
            </EuiButtonEmpty>
          </EuiFlexItem>
          <EuiFlexItem>
            <EuiButton
              data-test-subj="create-role"
              fill={true}
              href="#/roles/create"
            >
              Create role
            </EuiButton>
          </EuiFlexItem>
        </EuiFlexGroup>
      </EuiPageContentHeaderSection>
    </EuiPageContentHeader>
    <EuiPageBody>
      <EuiInMemoryTable
        columns={
          Array [
            Object {
              "field": "roleName",
              "name": "Role",
              "render": [Function],
              "sortable": true,
            },
            Object {
              "field": "clusterPermissions",
              "name": "Cluster permissions",
              "render": [Function],
              "truncateText": true,
            },
            Object {
              "field": "indexPermissions",
              "name": "Index",
              "render": [Function],
              "truncateText": true,
            },
            Object {
              "field": "internalUsers",
              "name": "Internal users",
              "render": [Function],
            },
            Object {
              "field": "backendRoles",
              "name": "Backend roles",
              "render": [Function],
            },
            Object {
              "field": "tenantPermissions",
              "name": "Tenants",
              "render": [Function],
            },
            Object {
              "field": "reserved",
              "name": "Customization",
              "render": [Function],
            },
          ]
        }
        data-test-subj="role-list"
        error=""
        itemId="roleName"
        items={Array []}
        loading={false}
        message="No items found"
        pagination={true}
        responsive={true}
        search={Object {}}
        selection={
          Object {
            "onSelectionChange": [MockFunction],
          }
        }
        sorting={true}
        tableLayout="auto"
      />
    </EuiPageBody>
  </EuiPageContent>
</Fragment>
`;

exports[`Role list Render columns render Customization column 1`] = `
<EuiFlexGroup
  alignItems="center"
  gutterSize="xs"
>
  <EuiFlexItem
    grow={false}
  >
    <EuiIcon
      type="lock"
    />
  </EuiFlexItem>
  <EuiFlexItem
    grow={false}
  >
    <EuiText
      className="table-items"
      data-test-subj="filter-reserved"
    >
      Reserved
    </EuiText>
  </EuiFlexItem>
</EuiFlexGroup>
`;

exports[`Role list Render columns render role name column 1`] = `
<a
  href="#/roles/view/role1"
>
  role1
</a>
`;
