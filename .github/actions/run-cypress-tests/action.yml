name: Run Cypress Tests
description: 'Runs Cypress tests for the security-dashboards-plugin with opensearch_dashboards.yml and security configuration provided'

inputs:
  security_config_file:
    description: 'Name of the security plugin config file'
    required: false
  dashboards_config_file:
    description: 'Name of OpenSearch Dashboards config file'
    required: false
  yarn_command:
    description: 'The yarn command to start running cypress tests'
    required: true
  osd_base_path:
    description: 'The base path for OpenSearch Dashboards'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Set env
      run: |
        opensearch_version=$(node -p "require('./package.json').opensearchDashboards.version")
        plugin_version=$(node -p "require('./package.json').version")
        echo "OPENSEARCH_VERSION=$opensearch_version" >> $GITHUB_ENV
        echo "PLUGIN_VERSION=$plugin_version" >> $GITHUB_ENV
      shell: bash

    - name: Download security plugin and create setup scripts
      uses: ./.github/actions/download-plugin
      with:
        opensearch-version: ${{ env.OPENSEARCH_VERSION }}
        plugin-name: ${{ env.PLUGIN_NAME }}
        plugin-version: ${{ env.PLUGIN_VERSION }}
        download-location: ${{ env.PLUGIN_NAME }}
    
    - name: Run Opensearch with A Single Plugin
      uses: derek-ho/start-opensearch@v2
      with:
        opensearch-version: ${{ env.OPENSEARCH_VERSION }}
        plugins: "file:$(pwd)/opensearch-security.zip"
        security-enabled: true
        admin-password: ${{ env.OPENSEARCH_INITIAL_ADMIN_PASSWORD }}
        security_config_file: ${{ inputs.security_config_file }}

    # OSD bootstrap
    - name: Run Dashboard with Security Dashboards Plugin
      uses: derek-ho/setup-opensearch-dashboards@v1
      with:
        plugin_name: security-dashboards-plugin
        opensearch_dashboards_yml: ${{ inputs.dashboards_config_file }}

    - name: Run pretest script
      if: ${{ runner.os == 'Linux' }}
      run: |
        cd ./OpenSearch-Dashboards/plugins/security-dashboards-plugin
        if [ -z "${{ inputs.osd_base_path }}" ]; then
          yarn runIdp &
        else
          yarn runIdp --basePath ${{ inputs.osd_base_path }} &
        fi
      shell: bash

    - name: Run OpenSearch Dashboards with provided configuration
      if: ${{ runner.os == 'Linux' }}
      run: |
        cd ./OpenSearch-Dashboards
        if [ -z "${{ inputs.osd_base_path }}" ]; then
          nohup yarn start --no-base-path --no-watch --csp.warnLegacyBrowsers=false | tee dashboard.log &
        else
          nohup yarn start --no-watch --csp.warnLegacyBrowsers=false | tee dashboard.log &
        fi
      shell: bash

    # Check if OSD is ready with a max timeout of 600 seconds
    - name : Check If OpenSearch Dashboards Is Ready
      if: ${{ runner.os == 'Linux' }}
      run: |
        cd ./OpenSearch-Dashboards
        echo "Start checking OpenSearch Dashboards."
        for i in {1..60}; do
          if grep -q "bundles compiled successfully after" "dashboard.log"; then
            echo "OpenSearch Dashboards compiled successfully."
            break
          fi
          if [ $i -eq 60 ]; then
            echo "Timeout for 600 seconds reached. OpenSearch Dashboards did not finish compiling."
            exit 1
          fi
          sleep 10
        done
      shell: bash

    - name: Run Cypress Tests with retry
      uses: Wandalen/wretry.action@v3.3.0
      with:
        attempt_limit: 5
        attempt_delay: 2000
        command: |
          yarn add cypress --save-dev
          eval ${{ inputs.yarn_command }} 
