name: CI

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev
      - github-action
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        # TODO: Parse this from security plugin
        java-version: 13
    - name: Checkout Kibana
      uses: actions/checkout@v2
      with:
        path: kibana
        repository: elastic/kibana
      run: git checkout tags/v7.9.1 -b v7.9.1
    - name: Get node and yarn versions
      id: versions
      run: |
        echo "::set-output name=node_version::$(cat ./kibana/.node-version)"
        echo "::set-output name=yarn_version::$(cat ./kibana/package.json | jq '.engines.yarn' | tr -d '"')"
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ steps.versions.outputs.node_version }}
        registry-url: 'https://registry.npmjs.org'
    - name: Install correct yarn version for Kibana
      run: |
        npm uninstall -g yarn
        echo "Installing yarn ${{ steps.versions_step.outputs.yarn_version }}"
        npm i -g yarn@${{ steps.versions.outputs.yarn_version }}
    - name: Create plugins dir
      run: |
        cd ./kibana
        mkdir plugins
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: kibana/plugins/opendistro_security
        ref: ${{ github.ref }}
    - name: Bootstrap Kibana
      run: |
        cd ./kibana
        yarn kbn bootstrap --oss
    - name: Run lint
      run: |
        cd ./kibana/plugins/opendistro_security
        yarn lint
    - name: Hack step to update kibana source to unblock tsc
      run: |
        cd ./kibana
        sed -i 170d' src/core/server/http/router/request.ts
    - name: build security plugin
      run: |
        cd ./kibana/plugins/opendistro_security
        node build_tools/build_plugin.js
