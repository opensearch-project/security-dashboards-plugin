name: Integration Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  tests:
    name: Run integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Run OpenSearch with plugin
        run: |
          docker build -t opensearch-test:1.0.0-beta1 -<<EOF
          FROM opensearchstaging/opensearch:1.0.0-beta1
          RUN echo "opendistro_security.unsupported.restapi.allow_securityconfig_modification: true" >> config/opensearch.yml
          RUN echo "discovery.type: single-node" >> config/opensearch.yml
          ENTRYPOINT bin/opensearch
          EOF
          docker run -d -p 9200:9200 -p 9600:9600 -i opensearch-test:1.0.0-beta1
          
      - name: Checkout OpenSearch Dashboard
        uses: actions/checkout@v2
        with:
          path: OpenSearch-Dashboards
          repository: opensearch-project/OpenSearch-Dashboards
          fetch-depth: 0
      
      - name: Create plugins dir
        run: |
          cd ./OpenSearch-Dashboards
          mkdir -p plugins
      
      - name: Checkout OpenSearch Dashboard Security plugin
        uses: actions/checkout@v2
        with:
          path: OpenSearch-Dashboards/plugins/security-dashboards-plugin
          ref: ${{ github.ref }}

      - name: Check OpenSearch Running
        continue-on-error: true
        run: curl -XGET https://localhost:9200 -u 'admin:admin' -k

      - name: Get OpenSearch Dashboards version
        id: osd_version
        run: |
          echo "::set-output name=osd_version::$(jq -r '.opensearchDashboards.version' ./OpenSearch-Dashboards/plugins/security-dashboards-plugin/package.json)"
      
      - name: Check OpenSearch Dashboards release tag
        run: |
          cd ./OpenSearch-Dashboards
          git checkout tags/${{ steps.osd_version.outputs.osd_version }} -b v${{ steps.osd_version.outputs.osd_version }}
      
      - name: Get node and yarn versions
        id: versions
        run: |
          echo "::set-output name=node_version::$(cat ./OpenSearch-Dashboards/.node-version)"
          echo "::set-output name=yarn_version::$(jq -r '.engines.yarn' ./OpenSearch-Dashboards/package.json)"
      
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.versions.outputs.node_version }}
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install correct yarn version for OpenSearch Dashboards
        run: |
          npm uninstall -g yarn
          echo "Installing yarn ${{ steps.versions_step.outputs.yarn_version }}"
          npm i -g yarn@${{ steps.versions.outputs.yarn_version }}
      
      - name: Check OpenSearch Running
        continue-on-error: true
        run: curl -XGET https://localhost:9200 -u 'admin:admin' -k

      - name: Bootstrap OpenSearch Dashboards
        run: |
          cd ./OpenSearch-Dashboards
          yarn osd bootstrap
      
      - name: Run integration tests
        run: |
          echo "check if opensearch is ready"
          curl -XGET https://localhost:9200 -u 'admin:admin' -k
          cd ./OpenSearch-Dashboards/plugins/security-dashboards-plugin
          yarn test:jest_server --coverage
