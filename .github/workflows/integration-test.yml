name: Integration Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  tests:
    name: Run integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Download OpenSearch Core
        run: |
          wget https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/1.3.0/488/linux/x64/builds/opensearch/dist/opensearch-min-1.3.0-linux-x64.tar.gz
          tar -xzf opensearch-*.tar.gz
          rm -f opensearch-*.tar.gz

      - name: Download OpenSearch Security Plugin
        run: wget -O opensearch-security.zip https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/1.3.0/488/linux/x64/builds/opensearch/plugins/opensearch-security-1.3.0.0.zip

      - name: Run OpenSearch with plugin
        run: |
          cat > os-ep.sh <<EOF
          yes | opensearch-plugin install file:///docker-host/security-plugin.zip
          chmod +x plugins/opensearch-security/tools/install_demo_configuration.sh
          yes | plugins/opensearch-security/tools/install_demo_configuration.sh
          echo "plugins.security.unsupported.restapi.allow_securityconfig_modification: true" >> /opensearch/config/opensearch.yml
          chown 1001:1001 -R /opensearch
          su -c "/opensearch/bin/opensearch" -s /bin/bash opensearch
          EOF
          docker build -t opensearch-test:latest -f- . <<EOF
          FROM ubuntu:latest
          COPY --chown=1001:1001 os-ep.sh /docker-host/
          COPY --chown=1001:1001 opensearch-security.zip /docker-host/security-plugin.zip
          COPY --chown=1001:1001 opensearch* /opensearch/
          RUN chmod +x /docker-host/os-ep.sh
          RUN useradd -u 1001 -s /sbin/nologin opensearch
          ENV PATH="/opensearch/bin:${PATH}"
          WORKDIR /opensearch/
          ENTRYPOINT /docker-host/os-ep.sh
          EOF
          docker run -d -p 9200:9200 -p 9600:9600 -i opensearch-test:latest

      - name: Checkout OpenSearch Dashboard
        uses: actions/checkout@v2
        with:
          path: OpenSearch-Dashboards
          repository: opensearch-project/OpenSearch-Dashboards
          ref: '1.x'
          fetch-depth: 0
      
      - name: Create plugins dir
        run: |
          cd ./OpenSearch-Dashboards
          mkdir -p plugins
      
      - name: Checkout OpenSearch Dashboard Security plugin
        uses: actions/checkout@v2
        with:
          path: OpenSearch-Dashboards/plugins/security-dashboards-plugin
          ref: ${{ github.ref }}

      - name: Check OpenSearch Running
        continue-on-error: true
        run: curl -XGET https://localhost:9200 -u 'admin:admin' -k

      # - name: Get OpenSearch Dashboards version
      #   id: osd_version
      #   run: |
      #     echo "::set-output name=osd_version::$(jq -r '.opensearchDashboards.version' ./OpenSearch-Dashboards/plugins/security-dashboards-plugin/package.json)"
      
      # - name: Check OpenSearch Dashboards release tag
      #   run: |
      #     cd ./OpenSearch-Dashboards
      #     git checkout tags/${{ steps.osd_version.outputs.osd_version }} -b v${{ steps.osd_version.outputs.osd_version }}
      
      - name: Get node and yarn versions
        id: versions
        run: |
          echo "::set-output name=node_version::$(cat ./OpenSearch-Dashboards/.node-version)"
          echo "::set-output name=yarn_version::$(jq -r '.engines.yarn' ./OpenSearch-Dashboards/package.json)"
      
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.versions.outputs.node_version }}
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install correct yarn version for OpenSearch Dashboards
        run: |
          npm uninstall -g yarn
          echo "Installing yarn ${{ steps.versions_step.outputs.yarn_version }}"
          npm i -g yarn@${{ steps.versions.outputs.yarn_version }}
      
      - name: Check OpenSearch Running
        continue-on-error: true
        run: curl -XGET https://localhost:9200 -u 'admin:admin' -k

      - name: Bootstrap OpenSearch Dashboards
        run: |
          cd ./OpenSearch-Dashboards
          yarn osd bootstrap
      
      - name: Run integration tests
        run: |
          echo "check if opensearch is ready"
          curl -XGET https://localhost:9200 -u 'admin:admin' -k
          cd ./OpenSearch-Dashboards/plugins/security-dashboards-plugin
          yarn test:jest_server --coverage
